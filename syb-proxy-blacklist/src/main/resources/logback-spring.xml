<?xml version="1.0" encoding="UTF-8"?>
<!-- scan:修改配置时，是否重新加载；
	 scanPeriod:检测配置文件修改时间间隔 -->
<configuration debug="false" scan = "true" scanPeriod="60 seconds">
	<!-- 定义变量：可使用${}使用变量 -->
	<property name="LOG_HOME" value="E://logback/" /><!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	
	<!-- name/class：通常只有文件策略，控制台策略。 -->
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 拦截器：过滤info级别以下的日志 -->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>info</level>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -%msg%n</pattern>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 日志文件输出的文件名, -->
			<FileNamePattern>${LOG_HOME}/TestWeb.log.%d{yyyy-MM-dd}.log</FileNamePattern>
			<!-- 日志文件保留天数 -->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern>
		</encoder>
		<!--日志文件最大的大小 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>

	<!-- 必选节点，用来指定最基础的日志输出级别 -->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</root>
	
	<!-- 细粒度控制类的日志信息;additivity是否向上传递
		如果设置为true;将会打印2次，logger打印一次，root打印一次
	 -->
	<logger name="com.shenpu.proxy.verify.VerifyAppliaction" level="info" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</logger>
	
	<!-- 多环境配置，配置文件名称必须为logback-spring.xml -->
	<springProfile name="test,dev,pro">
		<logger name="com.shenpu.proxy.verify.VerifyAppliaction" level="info" additivity="false"/>
	</springProfile>
	
</configuration>